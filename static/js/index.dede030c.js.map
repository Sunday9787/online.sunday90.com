{"version":3,"file":"index.dede030c.js","sources":["../../../src/class/sem/assets.js","../../../src/class/sem/core.js","../../../src/class/sem/spirit.js","../../../src/class/sem/texture.js","../../../src/views/canvas/sem/index.vue"],"sourcesContent":["import { cache } from './cache'\n\n/**\n * @param {string} url\n */\nfunction resolve(url) {\n  /**\n   * @type {Promise<ImageBitmap>}\n   */\n  return new Promise(function (resolve, reject) {\n    const source = new Image()\n    /**\n     * @type {ImageBitmap}\n     */\n    let bitmap\n\n    source.onerror = reject\n    source.onload = async function () {\n      bitmap = await window.createImageBitmap(source)\n\n      const asset = new Asset()\n      asset.bitmap = bitmap\n      asset.width = source.width\n      asset.height = source.height\n      asset.url = url\n\n      cache.set(url, asset)\n      source.remove()\n\n      resolve(bitmap)\n    }\n    source.src = url\n  })\n}\n\nexport class Asset {\n  /**\n   * @param {string[]} assets\n   */\n  static async load(assets) {\n    for (const item of assets) {\n      if (cache.has(item)) continue\n      await resolve(item)\n    }\n  }\n\n  /**\n   * @type {ImageBitmap|null}\n   */\n  bitmap = null\n  width = 0\n  height = 0\n  url = ''\n}\n","export class Application {\n  /**\n   * @type {number}\n   */\n  width\n\n  /**\n   * @type {number}\n   */\n  height\n\n  /**\n   *\n   * @type {HTMLCanvasElement}\n   */\n  canvas\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  ctx\n\n  /**\n   * @type {Stage}\n   */\n  stage = new Stage()\n\n  /**\n   * @param {number} [width]\n   * @param {number} [height]\n   */\n  constructor(width, height) {\n    this.height = height\n    this.width = width\n    this.canvas = document.createElement('canvas')\n    this.ctx = this.canvas.getContext('2d')\n\n    if (height) {\n      this.canvas.width = width\n      this.canvas.height = height\n      this.width = width\n      this.height = height\n\n      return\n    }\n\n    this.canvas.width = document.documentElement.clientWidth\n    this.canvas.height = document.documentElement.clientHeight\n    this.width = document.documentElement.clientWidth\n    this.height = document.documentElement.clientHeight\n  }\n\n  /**\n   * @param {object} option\n   * @param {string} option.background\n   * @param {HTMLElement | Window} option.resizeTo\n   */\n  init(option) {\n    const self = this\n\n    option.resizeTo.onresize = function (e) {\n      const width = self.canvas.parentElement.clientWidth\n      const height = self.canvas.parentElement.clientHeight\n\n      self.canvas.width = width\n      self.canvas.height = height\n      self.width = width\n      self.height = height\n    }\n\n    const render = function () {\n      self.render(option)\n      self.stage.render(self)\n      window.requestAnimationFrame(render)\n    }\n\n    window.requestAnimationFrame(render)\n  }\n\n  /**\n   * @param {object} option\n   * @param {string} option.background\n   * @param {HTMLElement | Window} option.resizeTo\n   */\n  render(option) {\n    this.ctx.fillStyle = option.background\n    this.ctx.fillRect(0, 0, this.width, this.height)\n    this.ctx.restore()\n  }\n}\n\nexport class Stage {\n  /**\n   * @type {import('./spirit').Spirit[]}\n   */\n  children = []\n\n  /**\n   * @param {import('./spirit').Spirit} sprit\n   */\n  add(sprit) {\n    this.children.push(sprit)\n  }\n\n  /**\n   * @param {Application} app\n   */\n  render(app) {\n    for (const item of this.children) {\n      item.render(app)\n    }\n  }\n}\n","class Anchor {\n  /**\n   * @param {[number]|[number,number]} args\n   * @returns {[number, number]}\n   */\n  static serialize(...args) {\n    const [x, y] = args\n\n    if (y) {\n      return args\n    }\n\n    return [x, x]\n  }\n\n  x = 0\n  y = 0\n\n  /**\n   * @type {[number, number]}\n   */\n  get anchor() {\n    return [this.x, this.y]\n  }\n\n  /**\n   * @param {[number]|[number,number]} args\n   */\n  constructor(...args) {\n    const [x, y] = Anchor.serialize(...args)\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * @example\n   * set(0.5); // This will set the origin to center. (0.5) is same as (0.5, 0.5).\n   * @param {[number]|[number,number]} args\n   */\n  set(...args) {\n    const [x, y] = Anchor.serialize(...args)\n    this.x = x\n    this.y = y\n  }\n}\n\nexport class Spirit {\n  /**\n   * @type {import('./texture').Texture}\n   */\n  texture\n\n  /**\n   * @type {Anchor}\n   */\n  anchor = new Anchor(0)\n\n  x = 0\n  y = 0\n\n  /**\n   * @param {import('./texture').Texture} texture\n   */\n  constructor(texture) {\n    this.texture = texture\n  }\n\n  /**\n   * @param {import('./core').Application} app\n   */\n  render(app) {\n    app.ctx.drawImage(\n      this.texture.asset.bitmap,\n      this.x - this.texture.width * this.anchor.x,\n      this.y - this.texture.height * this.anchor.y,\n      this.texture.width,\n      this.texture.height\n    )\n  }\n}\n","import { cache } from './cache'\n\nexport class Texture {\n  /**\n   * @param {string} url\n   */\n  static from(url) {\n    const asset = cache.get(url)\n    if (asset) {\n      return new Texture(asset)\n    }\n  }\n\n  /**\n   * @type {number|null}\n   */\n  width = null\n\n  /**\n   * @type {number|null}\n   */\n  height = null\n\n  /**\n   * @type {import('./assets').Asset|null}\n   */\n  asset = null\n\n  /**\n   * @param {ImageBitmap} asset\n   * @param {number} [width]\n   * @param {number} [height]\n   */\n  constructor(asset, width, height) {\n    this.asset = asset\n    this.width = width || asset.width\n    this.height = height || asset.height\n  }\n}\n","<template lang=\"pug\">\n.sem-container\n  .sem-toolbar\n    el-form(size=\"small\" inline)\n      el-row\n        el-col(:span=\"12\")\n          el-input(size=\"small\" type=\"text\" v-model=\"form.img\")\n        el-col(:span=\"12\")\n          el-button(size=\"small\" @click=\"loadImg(form.img)\") 加载图片\n\n  .sem-stage.flex1(ref=\"stageRef\")\n</template>\n\n<script>\nimport { onMounted, ref } from 'vue'\nimport * as SEM from '@/class/sem'\n\nexport default {\n  name: 'CanvasSem',\n  data() {\n    return {\n      form: {\n        img: ''\n      },\n      /** @type {HTMLCanvasElement} */\n      canvas: null,\n      /** @type {CanvasRenderingContext2D|null } */\n      ctx: null\n    }\n  },\n  setup() {\n    /**\n     * @type {import('vue').Ref<HTMLElement>}\n     */\n    const stageRef = ref()\n    const app = new SEM.Application()\n\n    onMounted(async function () {\n      await SEM.Asset.load([\n        'https://static-1256180570.cos.ap-nanjing.myqcloud.com/image/2023-03-08-18-10-03-pexels-photo-896763.jpeg?imageMogr2/thumbnail/1920x/quality/80'\n      ])\n\n      stageRef.value.appendChild(app.canvas)\n      app.init({ background: 'rgb(16,153,187)', resizeTo: window })\n\n      const texture = SEM.Texture.from(\n        'https://static-1256180570.cos.ap-nanjing.myqcloud.com/image/2023-03-08-18-10-03-pexels-photo-896763.jpeg?imageMogr2/thumbnail/1920x/quality/80'\n      )\n\n      const sprit = new SEM.Spirit(texture)\n\n      sprit.anchor.set(0.5)\n      sprit.x = app.width / 2\n      sprit.y = app.height / 2\n\n      app.stage.add(sprit)\n    })\n\n    return {\n      stageRef\n    }\n  },\n  methods: {\n    /**\n     * @param {string} src\n     */\n    loadImg(src) {\n      const ctx = this.ctx\n      const img = new Image()\n      const canvas = this.canvas\n\n      img.onload = function () {\n        const originalHeight = img.height\n        const originalWidth = img.width\n\n        // 目标宽度和高度（缩放）\n        const targetWidth = originalWidth * 0.2\n        const targetHeight = originalHeight * 0.2\n\n        ctx.drawImage(\n          img,\n          canvas.width / 2 - targetWidth / 2,\n          canvas.height / 2 - targetHeight / 2,\n          targetWidth,\n          targetHeight\n        )\n      }\n\n      img.src = src\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.sem-container {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n</style>\n"],"names":["resolve","url","Promise","reject","source","Image","bitmap","onerror","onload","async","window","createImageBitmap","asset","Asset","width","height","cache","set","remove","src","constructor","__publicField","this","load","assets","item","has","Application","Stage","canvas","document","createElement","ctx","getContext","documentElement","clientWidth","clientHeight","init","option","self","resizeTo","onresize","e","parentElement","render","stage","requestAnimationFrame","fillStyle","background","fillRect","restore","add","sprit","children","push","app","Anchor","args","x","y","serialize","anchor","Spirit","texture","drawImage","Texture","from","get","name","data","form","img","setup","stageRef","ref","SEM.Application","onMounted","SEM.Asset","value","appendChild","SEM.Texture","SEM.Spirit","methods","loadImg","originalHeight","targetWidth","targetHeight"],"mappings":"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"}