{"version":3,"file":"template-control.fa560f86.js","sources":["../../../src/views/template/hooks/controlManage.js","../../../src/views/template/components/template-control.vue","../../../src/views/template/hooks/useBorder.js"],"sourcesContent":["import { getCurrentInstance, inject, onBeforeUnmount, onMounted, ref } from 'vue'\n\n/**\n * @type {Map<number, Vue>}\n */\nconst controls = new Map()\n\nexport function useControl() {\n  /**\n   * @type {Vue}\n   */\n  const stageInstance = inject('stageInstance')\n  const vm = getCurrentInstance().proxy\n\n  /**\n   * 是否多选\n   */\n  const multiple = ref(false)\n\n  /**\n   * @param {PointerEvent} e\n   */\n  const pointerdown = function (e) {\n    for (const [_uid, control] of controls) {\n      if (vm._uid === _uid) continue\n\n      if (!multiple.value) {\n        control.visible = false\n      }\n    }\n  }\n\n  /**\n   * @param {KeyboardEvent} e\n   */\n  const keydown = function (e) {\n    if (e.shiftKey) {\n      multiple.value = true\n    }\n  }\n\n  /**\n   * @param {KeyboardEvent} e\n   */\n  const keyup = function (e) {\n    multiple.value = false\n  }\n\n  onMounted(function () {\n    controls.set(vm._uid, vm)\n\n    vm.$el.addEventListener('pointerdown', pointerdown)\n    stageInstance.$el.addEventListener('keydown', keydown)\n    stageInstance.$el.addEventListener('keyup', keyup)\n  })\n\n  onBeforeUnmount(function () {\n    controls.delete(vm._uid)\n\n    vm.$el.removeEventListener('pointerdown', pointerdown)\n    stageInstance.$el.removeEventListener('keydown', keydown)\n    stageInstance.$el.removeEventListener('keyup', keyup)\n  })\n\n  return { multiple }\n}\n","<template lang=\"pug\">\n.template-control(\n  :class=\"{ visible, lock }\"\n  :style=\"wrapperStyle\"\n  @pointerdown.stop=\"onPointerdown\")\n  div.template-control-mask\n  i.template-control-point.top-left(@pointerdown.stop=\"onControlPointerdown('topLeft', $event)\")\n  i.template-control-point.top-center(@pointerdown.stop=\"onControlPointerdown('topCenter', $event)\")\n  i.template-control-point.top-right(@pointerdown.stop=\"onControlPointerdown('topRight', $event)\")\n  i.template-control-point.center-left(@pointerdown.stop=\"onControlPointerdown('centerLeft', $event)\")\n  i.template-control-point.center-right(@pointerdown.stop=\"onControlPointerdown('centerRight', $event)\")\n  i.template-control-point.bottom-left(@pointerdown.stop=\"onControlPointerdown('bottomLeft', $event)\")\n  i.template-control-point.bottom-center(@pointerdown.stop=\"onControlPointerdown('bottomCenter', $event)\")\n  i.template-control-point.bottom-right(@pointerdown.stop=\"onControlPointerdown('bottomRight', $event)\")\n  slot\n</template>\n\n<script>\nimport { computed, getCurrentInstance, nextTick, onBeforeUnmount, onMounted, reactive, ref } from 'vue'\nimport { useControl } from '@/views/template/hooks/controlManage'\nimport { useBorderSize } from '@/views/template/hooks/useBorder'\n\n/**\n * @type {Record<string, (this: Vue, e: PointerEvent) => void>}\n */\nconst onPointeDownHandle = {\n  topLeft(e) {\n    const rect = this.$el.getBoundingClientRect()\n    this.stashPosition = {\n      x: rect.left,\n      y: rect.top\n    }\n  },\n  topCenter(e) {\n    const rect = this.$el.getBoundingClientRect()\n    this.stashPosition = {\n      x: rect.left,\n      y: rect.top\n    }\n  },\n  topRight(e) {\n    const rect = this.$el.getBoundingClientRect()\n    const scale = this.scale / 100\n    this.stashPosition = {\n      x: this.$el.offsetWidth * scale + rect.left,\n      y: rect.top\n    }\n  },\n  centerLeft(e) {\n    const rect = this.$el.getBoundingClientRect()\n    this.stashPosition = {\n      x: rect.left,\n      y: rect.top\n    }\n  },\n  centerRight(e) {\n    const rect = this.$el.getBoundingClientRect()\n    const scale = this.scale / 100\n    this.stashPosition = {\n      x: this.$el.offsetWidth * scale + rect.left,\n      y: (this.$el.offsetHeight / 2) * scale + rect.top\n    }\n  },\n  bottomLeft(e) {\n    const rect = this.$el.getBoundingClientRect()\n    const scale = this.scale / 100\n\n    this.stashPosition = {\n      x: rect.left,\n      y: this.$el.offsetHeight * scale + rect.top\n    }\n  },\n  bottomCenter(e) {\n    const rect = this.$el.getBoundingClientRect()\n    const scale = this.scale / 100\n\n    this.stashPosition = {\n      x: (this.$el.offsetWidth / 2) * scale + rect.left,\n      y: this.$el.offsetHeight * scale + rect.top\n    }\n  },\n  bottomRight(e) {\n    const rect = this.$el.getBoundingClientRect()\n    const scale = this.scale / 100\n    this.stashPosition = {\n      x: this.$el.offsetWidth * scale + rect.left,\n      y: this.$el.offsetHeight * scale + rect.top\n    }\n  }\n}\n\n/**\n * @type {Record<string, (this: Vue, e: PointerEvent) => void>}\n */\nconst onPointermoveHandle = {\n  topLeft(e) {\n    if (this.stashPosition) {\n      const scale = this.scale / 100\n      const rect = this.stageInstance.$el.getBoundingClientRect()\n      let y = e.pageY - rect.top - this.offset.h * scale\n      let x = e.pageX - rect.left - this.offset.w * scale\n\n      if (x <= 0) {\n        x = 0\n      }\n\n      let w = this.data.w + (this.data.x - x / scale)\n\n      if (w <= this.miniSize.w) {\n        w = this.miniSize.w\n      } else {\n        this.data.x = x / scale\n      }\n\n      if (y <= 0) {\n        y = 0\n      }\n\n      let h = this.data.h + (this.data.y - y / scale)\n\n      if (h <= this.miniSize.h) {\n        h = this.miniSize.h\n      } else {\n        this.data.y = y / scale\n      }\n\n      this.data.h = h\n      this.data.w = w\n    }\n  },\n  topCenter(e) {\n    if (this.stashPosition) {\n      const scale = this.scale / 100\n      const rect = this.stageInstance.$el.getBoundingClientRect()\n      let y = e.pageY - rect.top - this.offset.h * scale\n\n      if (y <= 0) {\n        y = 0\n      }\n\n      let h = this.data.h + (this.data.y - y / scale)\n\n      if (h <= this.miniSize.h) {\n        h = this.miniSize.h\n      } else {\n        this.data.y = y / scale\n      }\n\n      this.data.h = h\n    }\n  },\n  topRight(e) {\n    if (this.stashPosition) {\n      const scale = this.scale / 100\n      const rect = this.stageInstance.$el.getBoundingClientRect()\n      let w = this.initSize.w * scale + (e.pageX - this.stashPosition.x)\n\n      /**\n       * 左边限制\n       */\n      if (w <= this.miniSize.w * scale) {\n        w = this.miniSize.w * scale\n      }\n\n      /**\n       * 右边限制\n       */\n      if (this.$el.offsetLeft * scale + w >= this.stageInstance.$el.clientWidth * scale) {\n        w = (this.stageInstance.$el.clientWidth - this.$el.offsetLeft) * scale\n      }\n\n      this.data.w = w / scale\n\n      let y = e.pageY - rect.top - this.offset.h * scale\n\n      if (y <= 0) {\n        y = 0\n      }\n\n      let h = this.data.h + (this.data.y - y / scale)\n\n      if (h <= this.miniSize.h) {\n        h = this.miniSize.h\n      } else {\n        this.data.y = y / scale\n      }\n\n      this.data.h = h\n    }\n  },\n  centerLeft(e) {\n    if (this.stashPosition) {\n      const scale = this.scale / 100\n      const rect = this.stageInstance.$el.getBoundingClientRect()\n      let x = e.pageX - rect.left - this.offset.w * scale\n\n      if (x <= 0) {\n        x = 0\n      }\n\n      let w = this.data.w + (this.data.x - x / scale)\n\n      if (w <= this.miniSize.w) {\n        w = this.miniSize.w\n      } else {\n        this.data.x = x / scale\n      }\n\n      this.data.w = w\n    }\n  },\n  centerRight(e) {\n    if (this.stashPosition) {\n      const scale = this.scale / 100\n      let w = this.initSize.w * scale + (e.pageX - this.stashPosition.x)\n\n      /**\n       * 左边限制\n       */\n      if (w <= this.miniSize.w * scale) {\n        w = this.miniSize.w * scale\n      }\n\n      /**\n       * 右边限制\n       */\n      if (this.$el.offsetLeft * scale + w >= this.stageInstance.$el.clientWidth * scale) {\n        w = (this.stageInstance.$el.clientWidth - this.$el.offsetLeft) * scale\n      }\n\n      this.data.w = w / scale\n    }\n  },\n  bottomLeft(e) {\n    if (this.stashPosition) {\n      const scale = this.scale / 100\n      const rect = this.stageInstance.$el.getBoundingClientRect()\n      let x = e.pageX - rect.left - this.offset.w * scale\n      let h = this.initSize.h * scale + (e.pageY - this.stashPosition.y)\n\n      /**\n       * 上边限制\n       */\n      if (h <= this.miniSize.h * scale) {\n        h = this.miniSize.h * scale\n      }\n\n      /**\n       * 下边限制\n       */\n      if (this.$el.offsetTop * scale + h >= this.stageInstance.$el.clientHeight * scale) {\n        h = this.stageInstance.$el.clientHeight * scale - this.$el.offsetTop * scale\n      }\n\n      this.data.h = h / scale\n\n      if (x <= 0) {\n        x = 0\n      }\n\n      let w = this.data.w + (this.data.x - x / scale)\n\n      if (w <= this.miniSize.w) {\n        w = this.miniSize.w\n      } else {\n        this.data.x = x / scale\n      }\n\n      this.data.w = w\n    }\n  },\n  bottomCenter(e) {\n    if (this.stashPosition) {\n      const scale = this.scale / 100\n      let h = this.initSize.h * scale + (e.pageY - this.stashPosition.y)\n\n      /**\n       * 上边限制\n       */\n      if (h <= this.miniSize.h * scale) {\n        h = this.miniSize.h * scale\n      }\n\n      /**\n       * 下边限制\n       */\n      if (this.$el.offsetTop * scale + h >= this.stageInstance.$el.clientHeight * scale) {\n        h = this.stageInstance.$el.clientHeight * scale - this.$el.offsetTop * scale\n      }\n\n      this.data.h = h / scale\n    }\n  },\n  bottomRight(e) {\n    const scale = this.scale / 100\n    let w = this.initSize.w * scale + (e.pageX - this.stashPosition.x)\n    let h = this.initSize.h * scale + (e.pageY - this.stashPosition.y)\n\n    /**\n     * 左边限制\n     */\n    if (w <= this.miniSize.w * scale) {\n      w = this.miniSize.w * scale\n    }\n\n    /**\n     * 上边限制\n     */\n    if (h <= this.miniSize.h * scale) {\n      h = this.miniSize.h * scale\n    }\n\n    /**\n     * 右边限制\n     */\n    if (this.$el.offsetLeft * scale + w >= this.stageInstance.$el.clientWidth * scale) {\n      w = (this.stageInstance.$el.clientWidth - this.$el.offsetLeft) * scale\n    }\n\n    /**\n     * 下边限制\n     */\n    if (this.$el.offsetTop * scale + h >= this.stageInstance.$el.clientHeight * scale) {\n      h = (this.stageInstance.$el.clientHeight - this.$el.offsetTop) * scale\n    }\n\n    this.data.w = w / scale\n    this.data.h = h / scale\n  }\n}\n\nexport default {\n  name: 'TemplateControl',\n  inject: ['stageInstance'],\n  props: {\n    zIndex: {\n      type: Number,\n      required: true\n    },\n    scale: {\n      type: Number,\n      default: 1\n    },\n    position: {\n      type: Object,\n      required: true\n    },\n    size: {\n      type: Object,\n      required: true\n    },\n    value: {\n      type: Boolean,\n      required: true\n    },\n    lock: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup(props, context) {\n    const vm = getCurrentInstance().proxy\n    const visible = computed({\n      get() {\n        return props.value\n      },\n      set(val) {\n        context.emit('input', val)\n      }\n    })\n\n    const { multiple } = useControl()\n    /**\n     * 指针点击类型 - 控制方向类型/null\n     */\n    const pointType = ref(null)\n    /**\n     * 实际显示 定位 & 宽度\n     * @type {{x: number, y: number, h: number, w: number}}\n     */\n    const data = reactive({ x: props.position.x, y: props.position.y, h: props.size.h, w: props.size.w })\n    /**\n     * 暂存拖动位置 pageX/pageY\n     */\n    const stashPosition = ref(null)\n    /**\n     * 初始控件大小\n     * 每次拖动后需更新此值\n     */\n    const initSize = reactive({ w: 0, h: 0 })\n    /**\n     * 最小控件大小\n     */\n    const miniSize = reactive({ w: 0, h: 0 })\n\n    const offset = useBorderSize(vm.stageInstance)\n\n    /**\n     * @param {PointerEvent} e\n     */\n    const onPointerdown = function (e) {\n      const scale = props.scale / 100\n\n      visible.value = true\n      pointType.value = null\n      stashPosition.value = {\n        x: e.pageX - vm.$el.offsetLeft * scale,\n        y: e.pageY - vm.$el.offsetTop * scale\n      }\n\n      context.emit('select', vm)\n      context.emit('moveStart', { x: data.x, y: data.y })\n    }\n\n    /**\n     * @param {PointerEvent} e\n     */\n    const onPointermove = function (e) {\n      if (props.lock) return\n      if (stashPosition.value) {\n        const scale = props.scale / 100\n        if (pointType.value) {\n          onPointermoveHandle[pointType.value].call(vm, e)\n\n          context.emit('update:position', { x: data.x, y: data.y })\n          context.emit('update:size', { w: data.w, h: data.h })\n          return\n        }\n\n        let x = e.pageX - stashPosition.value.x\n        let y = e.pageY - stashPosition.value.y\n\n        /**\n         * 左边限制\n         */\n        if (x <= 0) x = 0\n\n        /**\n         * 上边限制\n         */\n        if (y <= 0) y = 0\n\n        /**\n         * 右边限制\n         */\n        if (x > (vm.stageInstance.$el.clientWidth - initSize.w) * scale) {\n          x = (vm.stageInstance.$el.clientWidth - initSize.w) * scale\n        }\n\n        /**\n         * 下边限制\n         */\n        if (y > (vm.stageInstance.$el.clientHeight - initSize.h) * scale) {\n          y = (vm.stageInstance.$el.clientHeight - initSize.h) * scale\n        }\n\n        data.x = x / scale\n        data.y = y / scale\n\n        context.emit('update:position', { x: data.x, y: data.y })\n        context.emit('move', { x: data.x, y: data.y })\n      }\n    }\n\n    /**\n     * @param {PointerEvent} e\n     */\n    const onPointerup = function (e) {\n      if (stashPosition.value) {\n        stashPosition.value = null\n        pointType.value = null\n        initSize.w = data.w\n        initSize.h = data.h\n\n        context.emit('moveEnd')\n        context.emit('resizeEnd')\n      }\n    }\n\n    /**\n     * @param {PointerEvent} e\n     */\n    const onBodyPointerdown = function (e) {\n      visible.value = false\n    }\n\n    onMounted(function () {\n      nextTick(function () {\n        data.w = initSize.w = miniSize.w = vm.$el.offsetWidth\n        data.h = initSize.h = miniSize.h = vm.$el.offsetHeight\n        context.emit('update:size', { w: data.w, h: data.h })\n      })\n\n      window.addEventListener('pointerdown', onBodyPointerdown)\n      vm.stageInstance.$el.addEventListener('pointermove', onPointermove)\n      vm.stageInstance.$el.addEventListener('pointerup', onPointerup)\n    })\n\n    onBeforeUnmount(function () {\n      window.removeEventListener('pointerdown', onBodyPointerdown)\n      vm.stageInstance.$el.removeEventListener('pointermove', onPointermove)\n      vm.stageInstance.$el.removeEventListener('pointerup', onPointerup)\n    })\n\n    return {\n      offset,\n      visible,\n      multiple,\n      pointType,\n      initSize,\n      miniSize,\n      data,\n      stashPosition,\n      onPointerdown\n    }\n  },\n  computed: {\n    wrapperStyle() {\n      return {\n        zIndex: this.zIndex,\n        left: this.data.x + 'px',\n        top: this.data.y + 'px',\n        width: this.data.w ? this.data.w + 'px' : 'auto',\n        height: this.data.h ? this.data.h + 'px' : 'auto'\n      }\n    }\n  },\n  methods: {\n    /**\n     * @param {string} pointType\n     * @param {PointerEvent} e\n     */\n    onControlPointerdown(pointType, e) {\n      this.pointType = pointType\n      onPointeDownHandle[pointType].apply(this, [e])\n      this.$emit('resizeStart', { w: this.data.w, h: this.data.h })\n    }\n  },\n  watch: {\n    value(val) {\n      this.visible = val\n    },\n    position: {\n      deep: true,\n      handler(val) {\n        this.data.x = val.x\n        this.data.y = val.y\n      }\n    },\n    size: {\n      deep: true,\n      handler(val) {\n        this.data.w = val.w\n        this.data.h = val.h\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.template-control-mask {\n  position: absolute;\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n}\n\n.template-control-mask,\n.template-control-point {\n  border: 1px solid transparent;\n}\n\n.template-control-point {\n  position: absolute;\n  z-index: 2;\n  display: block;\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n\n  &.top-left {\n    top: 0;\n    left: 0;\n    cursor: nwse-resize;\n    transform: translate(-50%, -50%);\n  }\n\n  &.top-center {\n    top: 0;\n    left: 50%;\n    cursor: ns-resize;\n    transform: translate(-50%, -50%);\n  }\n\n  &.top-right {\n    top: 0;\n    right: 0;\n    cursor: nesw-resize;\n    transform: translate(50%, -50%);\n  }\n\n  &.center-left {\n    top: 50%;\n    left: 0;\n    cursor: ew-resize;\n    transform: translate(-50%, -50%);\n  }\n\n  &.center-right {\n    top: 50%;\n    right: 0;\n    cursor: ew-resize;\n    transform: translate(50%, -50%);\n  }\n\n  &.bottom-left {\n    bottom: 0;\n    left: 0;\n    cursor: nesw-resize;\n    transform: translate(-50%, 50%);\n  }\n\n  &.bottom-center {\n    bottom: 0;\n    left: 50%;\n    cursor: ns-resize;\n    transform: translate(-50%, 50%);\n  }\n\n  &.bottom-right {\n    right: 0;\n    bottom: 0;\n    cursor: nwse-resize;\n    transform: translate(50%, 50%);\n  }\n}\n\n.template-control {\n  position: absolute;\n  user-select: none;\n\n  &.lock {\n    .template-control-point {\n      display: none;\n    }\n  }\n\n  &.visible {\n    .template-control-mask,\n    .template-control-point {\n      border-color: var(--color-primary);\n    }\n\n    .template-control-point {\n      background-color: #fff;\n    }\n  }\n\n  &:not(.lock):active {\n    cursor: grab;\n  }\n}\n</style>\n","import { onMounted } from 'vue'\nimport { getBorderSize } from '@/views/template/utils'\n\n/**\n * @param {Vue} target\n */\nexport function useBorderSize(target) {\n  const border = { w: 0, h: 0 }\n\n  onMounted(function () {\n    const [w, h] = getBorderSize(target.$el)\n    border.w = w\n    border.h = h\n  })\n\n  return border\n}\n"],"names":["controls","Map","onPointeDownHandle","topLeft","e","rect","this","$el","getBoundingClientRect","stashPosition","x","left","y","top","topCenter","topRight","scale","offsetWidth","centerLeft","centerRight","offsetHeight","bottomLeft","bottomCenter","bottomRight","onPointermoveHandle","stageInstance","pageY","offset","h","pageX","w","data","miniSize","initSize","offsetLeft","clientWidth","offsetTop","clientHeight","name","inject","props","zIndex","type","Number","required","default","position","Object","size","value","Boolean","lock","setup","context","vm","getCurrentInstance","proxy","visible","computed","get","set","val","emit","multiple","ref","pointerdown","_uid","control","keydown","shiftKey","keyup","onMounted","addEventListener","onBeforeUnmount","delete","removeEventListener","useControl","pointType","reactive","target","border","getBorderSize","useBorderSize","onPointermove","call","onPointerup","onBodyPointerdown","nextTick","window","onPointerdown","wrapperStyle","width","height","methods","onControlPointerdown","apply","$emit","watch","deep","handler"],"mappings":"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"}