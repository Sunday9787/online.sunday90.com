{"version":3,"file":"template-area.1e70fa1a.js","sources":["../../../src/views/template/components/template-area.vue"],"sourcesContent":["<template lang=\"pug\">\nsvg.template-area(\n  xmlns=\"http://www.w3.org/2000/svg\"\n  :width=\"rectStyle.width\"\n  :height=\"rectStyle.height\"\n  :style=\"{ left: rectStyle.left, top: rectStyle.top }\")\n  rect(stroke=\"var(--color-primary)\" fill=\"rgba(0, 0, 0, 0.1)\" stroke-width=\"1\" height=\"100%\" width=\"100%\")\n</template>\n\n<script>\nimport { getCurrentInstance, inject, nextTick, onBeforeUnmount, onMounted, reactive, ref } from 'vue'\nimport { templateChannel, storeSymbol } from '@/views/template/constant'\nimport { getBorderSize } from '@/views/template/utils'\nimport eventBus from '@/utils/eventBus'\n\nexport default {\n  name: 'TemplateArea',\n  inject: ['stageInstance'],\n  props: {\n    scale: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props, context) {\n    const vm = getCurrentInstance().proxy\n    /**\n     * @type {Template.Store}\n     */\n    const store = inject(storeSymbol)\n    /**\n     * @type {import('vue').Ref<{x: number, y: number} | null>}\n     */\n    const stagePosition = ref(null)\n    const rect = reactive({ w: 0, h: 0, x: 0, y: 0 })\n\n    /**\n     * @type {Map<number, Template.BuiltinComponent>}\n     */\n    const components = new Map()\n\n    /**\n     * @param {PointerEvent} e\n     */\n    const pointerdown = function (e) {\n      if (vm.stageInstance.spaceDown) return\n      const scale = props.scale / 100\n      const x = (e.pageX - vm.stageRect.x) / scale - vm.offset.x\n      const y = (e.pageY - vm.stageRect.y) / scale - vm.offset.y\n\n      rect.x = x\n      rect.y = y\n\n      stagePosition.value = { x: e.pageX, y: e.pageY }\n    }\n\n    /**\n     * @param {PointerEvent} e\n     */\n    const pointermove = function (e) {\n      if (stagePosition.value) {\n        const scale = props.scale / 100\n        const w = (e.pageX - stagePosition.value.x) / scale\n        const h = (e.pageY - stagePosition.value.y) / scale\n\n        rect.w = w\n        rect.h = h\n\n        for (const [, component] of store.components) {\n          if (\n            component.props.position.x >= rect.x &&\n            component.props.position.x <= rect.x + rect.w &&\n            component.props.position.y >= rect.y &&\n            component.props.position.y <= rect.y + rect.h\n          ) {\n            if (!components.has(component.uid)) {\n              components.set(component.uid, component)\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * @param {PointerEvent} e\n     */\n    const pointerup = function (e) {\n      stagePosition.value = null\n      rect.w = rect.h = rect.x = rect.y = 0\n\n      if (components.size) {\n        const data = Array.from(components.values())\n\n        context.emit('area', data)\n        components.clear()\n\n        return\n      }\n\n      context.emit('unArea')\n    }\n\n    const stageChangeHandle = function (val) {\n      nextTick(function () {\n        vm.updateOffset()\n        vm.updateRect()\n      })\n    }\n\n    onMounted(function () {\n      eventBus.$on(templateChannel.stageMove, stageChangeHandle)\n      eventBus.$on(templateChannel.stagePaddingChange, stageChangeHandle)\n      eventBus.$on(templateChannel.stageSizeChange, stageChangeHandle)\n      eventBus.$on(templateChannel.stageScaleChange, stageChangeHandle)\n      eventBus.$emit(templateChannel.stageSizeChange)\n\n      vm.stageInstance.$el.addEventListener('pointerdown', pointerdown)\n      vm.stageInstance.$el.addEventListener('pointermove', pointermove)\n      vm.stageInstance.$el.addEventListener('pointerup', pointerup)\n    })\n\n    onBeforeUnmount(function () {\n      eventBus.$off(templateChannel.stageMove, stageChangeHandle)\n      eventBus.$off(templateChannel.stagePaddingChange, stageChangeHandle)\n      eventBus.$off(templateChannel.stageSizeChange, stageChangeHandle)\n      eventBus.$off(templateChannel.stageScaleChange, stageChangeHandle)\n\n      vm.stageInstance.$el.removeEventListener('pointerdown', pointerdown)\n      vm.stageInstance.$el.removeEventListener('pointermove', pointermove)\n      vm.stageInstance.$el.removeEventListener('pointerup', pointerup)\n    })\n\n    return { rect, stagePosition }\n  },\n  data() {\n    return {\n      stageRect: { x: 0, y: 0, w: 0, h: 0 },\n      offset: { x: 0, y: 0 }\n    }\n  },\n  computed: {\n    rectStyle() {\n      return {\n        width: this.rect.w >= 0 ? this.rect.w : 0,\n        height: this.rect.h >= 0 ? this.rect.h : 0,\n        left: this.rect.x + 'px',\n        top: this.rect.y + 'px'\n      }\n    }\n  },\n  methods: {\n    updateOffset() {\n      if (this.stageInstance.$el) {\n        const [x, y] = getBorderSize(this.stageInstance.$el)\n        this.offset = { x, y }\n        return\n      }\n\n      this.offset = { x: 0, y: 0 }\n    },\n    updateRect() {\n      if (this.stageInstance.$el) {\n        /**\n         * @type {DOMRect}\n         */\n        const rect = this.stageInstance.$el.getBoundingClientRect()\n        this.stageRect = {\n          x: rect.left,\n          y: rect.top,\n          w: rect.width,\n          h: rect.width\n        }\n\n        return\n      }\n\n      this.stageRect = { x: 0, y: 0, w: 0, h: 0 }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.template-area {\n  position: absolute;\n}\n</style>\n"],"names":["name","inject","props","scale","type","Number","required","setup","context","vm","getCurrentInstance","proxy","store","storeSymbol","stagePosition","ref","rect","reactive","w","h","x","y","components","Map","pointerdown","e","stageInstance","spaceDown","pageX","stageRect","offset","pageY","value","pointermove","component","position","has","uid","set","pointerup","size","data","Array","from","values","emit","clear","stageChangeHandle","val","nextTick","updateOffset","updateRect","onMounted","eventBus","$on","templateChannel","stageMove","stagePaddingChange","stageSizeChange","stageScaleChange","$emit","$el","addEventListener","onBeforeUnmount","$off","removeEventListener","computed","rectStyle","width","this","height","left","top","methods","getBorderSize","getBoundingClientRect"],"mappings":"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"}