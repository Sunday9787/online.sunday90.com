{"version":3,"file":"index.0527d8a6.js","sources":["../../../src/views/index.vue?chunkName=index"],"sourcesContent":["<template lang=\"pug\">\n.data-container\n  app-big-screen(:width=\"1920\" :height=\"1080\" :wrapperStyle=\"{ display: 'flex' }\")\n    aside.data-left\n      div#chart-pie1(style=\"height: 240px; width: 550px;\")\n      div#chart-line1(style=\"height: 280px; width: 550px;\")\n      div#chart-line2(style=\"height: 280px; width: 550px;\")\n      div#chart-line6(style=\"height: 280px; width: 550px;\")\n    section.data-main.flex1\n      div#chart-three(style=\"height: 800px; width: 880px;\")\n      el-row(type=\"flex\")\n        div#chart-gauge(style=\"height: 280px; width: 440px;\")\n        div#chart-line7(style=\"height: 280px; width: 440px;\")\n    aside.data-right\n      div#chart-line3(style=\"height: 180px; width: 550px;\")\n      div#chart-line4(style=\"height: 280px; width: 550px;\")\n      div#chart-line5(style=\"height: 280px; width: 550px;\")\n      div#chart-radar1(style=\"height: 300px; width: 550px;\")\n</template>\n\n<script>\nimport { onBeforeUnmount, onMounted, readonly } from 'vue'\nimport * as echarts from 'echarts'\n\nconst config = readonly({\n  backgroundColor: '#081736',\n  color: ['#0278e6', '#34d160', '#fcdf39', '#f19611', '#00c6ff', '#f76363']\n})\n\nfunction usePie1() {\n  const data = [\n    {\n      name: '农业专业合作社',\n      value: 7\n    },\n    {\n      name: '农业企业',\n      value: 6\n    },\n    {\n      name: '农业冷藏冷库',\n      value: 14\n    },\n    {\n      name: '农业园区',\n      value: 4\n    }\n  ]\n\n  /**\n   * @type {echarts.EChartsType}\n   */\n  let instance = null\n\n  onMounted(function () {\n    const el = document.querySelector('#chart-pie1')\n    instance = echarts.init(el)\n\n    instance.setOption({\n      backgroundColor: config.backgroundColor,\n      color: config.color,\n      grid: {\n        top: '30',\n        left: '1%',\n        right: '1%',\n        bottom: '0%',\n        containLabel: true\n      },\n      legend: {\n        orient: 'vertical',\n        top: 'center',\n        right: '0%',\n        itemGap: 20,\n        itemWidth: 16,\n        itemHeight: 16,\n        textStyle: {\n          color: '#fff',\n          fontSize: 14\n        },\n        data: ['农业专业合作社', '农业企业', '农业冷藏冷库', '农业园区']\n      },\n      series: [\n        {\n          name: '半径模式',\n          type: 'pie',\n          radius: ['25%', '75%'],\n          center: ['40%', '50%'],\n          roseType: 'radius',\n          minShowLabelAngle: 60,\n          labelLine: {\n            length: 1,\n            length2: 10,\n            smooth: true\n          },\n          data\n        }\n      ]\n    })\n  })\n\n  onBeforeUnmount(function () {\n    instance.dispose()\n  })\n}\n\nfunction useLine1() {\n  /**\n   * @type {echarts.EChartsType}\n   */\n  let instance = null\n\n  onMounted(function () {\n    const el = document.querySelector('#chart-line1')\n    instance = echarts.init(el)\n    /**\n     * @type {echarts.EChartsOption}\n     */\n    const options = {\n      backgroundColor: config.backgroundColor,\n      color: config.color,\n      grid: {\n        top: '0',\n        left: '1%',\n        right: '1%',\n        bottom: '8%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          color: '#FFFFFF'\n        }\n      },\n      yAxis: {\n        type: 'value',\n        min: 0,\n        // max: 140,\n        splitNumber: 4,\n        splitLine: {\n          show: false,\n          lineStyle: {\n            color: 'rgba(255,255,255,0.1)'\n          }\n        },\n        axisLabel: {\n          show: true,\n          margin: 20,\n          color: '#d1e6eb'\n        }\n      },\n      series: [\n        {\n          name: '示范',\n          type: 'line',\n          smooth: true, // 是否平滑\n          showAllSymbol: true,\n          // symbol: 'image://./static/images/guang-circle.png',\n          symbol: 'circle',\n          symbolSize: 10,\n          lineStyle: {\n            color: '#00b3f4',\n            shadowColor: 'rgba(0, 0, 0, .3)',\n            shadowBlur: 0,\n            shadowOffsetY: 5,\n            shadowOffsetX: 5\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: '#00b3f4'\n          },\n          itemStyle: {\n            color: '#00b3f4',\n            borderColor: '#fff',\n            borderWidth: 3,\n            shadowColor: 'rgba(0, 0, 0, .3)',\n            shadowBlur: 0,\n            shadowOffsetY: 2,\n            shadowOffsetX: 2\n          },\n          tooltip: {\n            show: false\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(\n              0,\n              0,\n              0,\n              1,\n              [\n                {\n                  offset: 0,\n                  color: 'rgba(0,179,244,0.3)'\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(0,179,244,0)'\n                }\n              ],\n              false\n            ),\n            shadowColor: 'rgba(0,179,244, 0.9)',\n            shadowBlur: 20\n          },\n          data: [502.84, 205.97, 332.79, 281.55, 398.35, 214.02, 114.02]\n        }\n      ]\n    }\n\n    instance.setOption(options)\n  })\n\n  onBeforeUnmount(function () {\n    instance.dispose()\n  })\n}\n\nfunction useLine2() {\n  const data = ['2020-2-17', '2020-2-17', '2020-2-17', '2020-2-17', '2020-2-17', '2020-2-17', '2020-2-17']\n\n  /**\n   * @type {Echarts.EChartsType}\n   */\n  let instance = null\n\n  onMounted(function () {\n    const el = document.querySelector('#chart-line2')\n    instance = echarts.init(el)\n\n    instance.setOption({\n      grid: {\n        top: '30',\n        left: '1%',\n        right: '1%',\n        bottom: '8%',\n        containLabel: true\n      },\n      xAxis: [\n        {\n          type: 'category',\n          boundaryGap: true,\n          axisLine: {\n            show: false\n          },\n          axisLabel: {\n            color: '#959FA9',\n            fontSize: 14\n          },\n          axisTick: {\n            show: false\n          },\n          data\n        }\n      ],\n      yAxis: [\n        {\n          type: 'value',\n          axisTick: {\n            show: false\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              type: 'dashed',\n              color: 'rgba(226, 226, 226, 0.3)',\n              width: 1\n            }\n          },\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: 'rgb(2,185,208)'\n            }\n          },\n          axisLabel: {\n            color: '#959FA9',\n            fontSize: 14\n          }\n        }\n      ],\n      series: [\n        {\n          name: '车型1',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          showAllSymbol: true,\n          symbolSize: 12,\n          label: {\n            show: true,\n            position: 'top'\n          },\n          itemStyle: {\n            color: 'rgba(119, 82, 255, 1)'\n          },\n\n          areaStyle: {\n            // 区域填充样式\n            color: new echarts.graphic.LinearGradient(\n              0,\n              0,\n              0,\n              1,\n              [\n                {\n                  offset: 0,\n                  color: 'rgba(119, 82, 255, 0.28)'\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(119, 82, 255, 0.01)'\n                }\n              ],\n              false\n            )\n          },\n          data: [80, 90, 70, 100, 110, 100, 90]\n        },\n        {\n          name: '车型2',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          showAllSymbol: true,\n          symbolSize: 12,\n          label: {\n            show: true,\n            position: 'top'\n          },\n          itemStyle: {\n            color: 'rgba(58, 199, 139, 1)'\n          },\n\n          areaStyle: {\n            // 区域填充样式\n            color: new echarts.graphic.LinearGradient(\n              0,\n              0,\n              0,\n              1,\n              [\n                {\n                  offset: 0,\n                  color: 'rgba(58, 199, 139, 0.28)'\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(58, 199, 139, 0.01)'\n                }\n              ],\n              false\n            )\n          },\n          data: [50, 60, 40, 60, 70, 40, 50]\n        },\n        {\n          name: '车型3',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          showAllSymbol: true,\n          symbolSize: 12,\n          label: {\n            show: true,\n            position: 'top'\n          },\n          itemStyle: {\n            color: 'rgba(0, 141, 240, 1)'\n          },\n\n          areaStyle: {\n            // 区域填充样式\n            color: new echarts.graphic.LinearGradient(\n              0,\n              0,\n              0,\n              1,\n              [\n                {\n                  offset: 0,\n                  color: 'rgba(0, 141, 240, 0.28)'\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(0, 141, 240, 0.01)'\n                }\n              ],\n              false\n            )\n          },\n          data: [10, 50, 30, 40, 50, 30, 26]\n        }\n      ]\n    })\n  })\n\n  onBeforeUnmount(function () {\n    instance.dispose()\n  })\n}\n\nfunction useLine3() {\n  const data = ['2020-2-17', '2020-2-17', '2020-2-17', '2020-2-17', '2020-2-17', '2020-2-17', '2020-2-17']\n\n  /**\n   * @type {Echarts.EChartsType}\n   */\n  let instance = null\n\n  onMounted(function () {\n    const el = document.querySelector('#chart-line3')\n    instance = echarts.init(el)\n\n    instance.setOption({\n      grid: {\n        top: '20',\n        left: '0',\n        right: '10%',\n        bottom: '8%',\n        containLabel: true\n      },\n      xAxis: [\n        {\n          type: 'category',\n          boundaryGap: true,\n          axisLine: {\n            show: false\n          },\n          axisLabel: {\n            color: '#959FA9',\n            fontSize: 14\n          },\n          axisTick: {\n            show: false\n          },\n          data\n        }\n      ],\n      yAxis: [\n        {\n          type: 'value',\n          axisTick: {\n            show: false\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              type: 'dashed',\n              color: 'rgba(226, 226, 226, 0.3)',\n              width: 1\n            }\n          },\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: 'rgb(2,185,208)'\n            }\n          },\n          axisLabel: {\n            color: '#959FA9',\n            fontSize: 14\n          }\n        }\n      ],\n      series: [\n        {\n          name: '车型1',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          showAllSymbol: true,\n          symbolSize: 12,\n          label: {\n            show: true,\n            position: 'top'\n          },\n          itemStyle: {\n            color: 'rgba(119, 82, 255, 1)'\n          },\n\n          areaStyle: {\n            // 区域填充样式\n            color: new echarts.graphic.LinearGradient(\n              0,\n              0,\n              0,\n              1,\n              [\n                {\n                  offset: 0,\n                  color: 'rgba(119, 82, 255, 0.28)'\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(119, 82, 255, 0.01)'\n                }\n              ],\n              false\n            )\n          },\n          data: [80, 90, 70, 100, 110, 100, 90]\n        },\n        {\n          name: '车型2',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          showAllSymbol: true,\n          symbolSize: 12,\n          label: {\n            show: true,\n            position: 'top'\n          },\n          itemStyle: {\n            color: 'rgba(58, 199, 139, 1)'\n          },\n\n          areaStyle: {\n            // 区域填充样式\n            color: new echarts.graphic.LinearGradient(\n              0,\n              0,\n              0,\n              1,\n              [\n                {\n                  offset: 0,\n                  color: 'rgba(58, 199, 139, 0.28)'\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(58, 199, 139, 0.01)'\n                }\n              ],\n              false\n            )\n          },\n          data: [50, 60, 40, 60, 70, 40, 50]\n        },\n        {\n          name: '车型3',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          showAllSymbol: true,\n          symbolSize: 12,\n          label: {\n            show: true,\n            position: 'top'\n          },\n          itemStyle: {\n            color: 'rgba(0, 141, 240, 1)'\n          },\n\n          areaStyle: {\n            // 区域填充样式\n            color: new echarts.graphic.LinearGradient(\n              0,\n              0,\n              0,\n              1,\n              [\n                {\n                  offset: 0,\n                  color: 'rgba(0, 141, 240, 0.28)'\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(0, 141, 240, 0.01)'\n                }\n              ],\n              false\n            )\n          },\n          data: [10, 50, 30, 40, 50, 30, 26]\n        }\n      ]\n    })\n  })\n\n  onBeforeUnmount(function () {\n    instance.dispose()\n  })\n}\n\nfunction useLine4() {\n  /**\n   * @type {echarts.EChartsType}\n   */\n  let instance = null\n\n  onMounted(function () {\n    const el = document.querySelector('#chart-line4')\n    instance = echarts.init(el)\n\n    instance.setOption({\n      grid: {\n        top: '20',\n        left: '0',\n        right: '10%',\n        bottom: '8%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          color: '#FFFFFF'\n        }\n      },\n      yAxis: {\n        type: 'value',\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: true,\n          lineStyle: {\n            type: 'dashed',\n            color: '#4C77A3'\n          }\n        },\n        axisLabel: {\n          color: '#FFFFFF'\n        }\n      },\n      series: [\n        {\n          data: [150, 230, 224, 218, 135, 147, 260],\n          type: 'line',\n          itemStyle: {\n            color: '#00F8FF',\n            opacity: 0\n          },\n          lineStyle: {}\n        },\n        {\n          type: 'pictorialBar',\n          symbolSize: [40, 20],\n          symbolOffset: [0, -10],\n          z: 12,\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n              {\n                offset: 1,\n                color: '#00E3FE'\n              },\n              {\n                offset: 0,\n                color: '#0176CD'\n              }\n            ])\n          },\n          symbolPosition: 'end',\n          data: [120, 200, 150, 80, 70, 110, 130]\n        },\n        {\n          data: [120, 200, 150, 80, 70, 110, 130],\n          type: 'bar',\n          barWidth: '40',\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n              {\n                offset: 1,\n                color: '#00E3FE'\n              },\n              {\n                offset: 0,\n                color: '#0176CD'\n              }\n            ])\n          }\n        }\n      ]\n    })\n  })\n\n  onBeforeUnmount(function () {\n    instance.dispose()\n  })\n}\n\nfunction useLine5() {\n  /**\n   * @type {echarts.EChartsType}\n   */\n  let instance = null\n\n  onMounted(function () {\n    const el = document.getElementById('chart-line5')\n    instance = echarts.init(el)\n    instance.setOption({\n      backgroundColor: config.backgroundColor,\n      grid: {\n        top: '20',\n        left: '0',\n        right: '10%',\n        bottom: '8%',\n        containLabel: true\n      },\n      legend: {\n        top: '20',\n        x: 'center',\n        fontSize: 16,\n        color: 'rgba(101, 213, 255, 1)',\n        icon: 'path://M512 881.777778 512 881.777778C716.222629 881.777778 881.777778 716.222629 881.777778 512 881.777778 307.777371 716.222629 142.222222 512 142.222222 307.777373 142.222222 142.222222 307.777371 142.222222 512 142.222222 716.222629 307.777373 881.777778 512 881.777778L512 881.777778ZM512 1024 512 1024C229.230208 1024 0 794.769789 0 512 0 229.230211 229.230208 0 512 0 794.769789 0 1024 229.230211 1024 512 1024 794.769789 794.769789 1024 512 1024L512 1024Z',\n        itemWidth: 8, // 设置宽度\n        itemHeight: 8, // 设置高度、\n        itemGap: 12 // 设置间距\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis', // axis , item\n        backgroundColor: 'RGBA(0, 49, 85, 1)',\n        borderColor: 'rgba(0, 151, 251, 1)',\n        borderWidth: 1,\n        borderRadius: 0,\n        color: '#BCE9FC',\n        fontSize: 16,\n        align: 'left'\n      },\n      xAxis: {\n        type: 'category',\n        boundaryGap: true,\n        data: ['奉城镇', '南桥镇', '四团镇', '青村镇', '柘林镇'],\n        axisLabel: {\n          // 坐标轴刻度标签的相关设置。\n          interval: 0, // 设置为 1，表示『隔一个标签显示一个标签』\n          //\tmargin:15,\n          color: '#65D5FF',\n          fontStyle: 'normal',\n          fontSize: 16\n        },\n        axisTick: {\n          // 坐标轴刻度相关设置。\n          show: false\n        },\n        axisLine: {\n          // 坐标轴轴线相关设置\n          lineStyle: {\n            color: 'rgba(77, 128, 254, 0.2)'\n          }\n        },\n        splitLine: {\n          // 坐标轴在 grid 区域中的分隔线。\n          show: true,\n          lineStyle: {\n            color: 'rgba(77, 128, 254, 0.2)'\n          }\n        }\n      },\n      yAxis: [\n        {\n          type: 'value',\n          splitNumber: 3,\n          axisLabel: {\n            color: '#65D5FF',\n            fontStyle: 'normal',\n            fontSize: 16\n          },\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: 'rgba(77, 128, 254, 0.2)'\n            }\n          }\n        }\n      ],\n      series: [\n        {\n          name: '1月',\n          type: 'pictorialBar',\n          barWidth: '60%',\n          stack: '总量',\n          label: {\n            show: false\n          },\n          itemStyle: {\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [\n                {\n                  offset: 0,\n                  color: 'rgba(0, 151, 251, 1)' // 0% 处的颜色\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(0, 34, 66, 0.2)' // 100% 处的颜色\n                }\n              ],\n              globalCoord: false // 缺省为 false\n            } // 渐变颜色\n          },\n          symbol:\n            'path://M12.000,-0.000 C12.000,-0.000 16.074,60.121 22.731,60.121 C26.173,60.121 -3.234,60.121 0.511,60.121 C7.072,60.121 12.000,-0.000 12.000,-0.000 Z',\n\n          data: [23, 84, 101, 74, 87]\n        },\n        {\n          name: '2月',\n          type: 'pictorialBar',\n          barWidth: '60%',\n          stack: '总量',\n          label: {\n            show: false\n          },\n          itemStyle: {\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [\n                {\n                  offset: 0,\n                  color: 'rgba(48, 236, 166, 1)' // 0% 处的颜色\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(0, 34, 66, 0.2)' // 100% 处的颜色\n                }\n              ],\n              globalCoord: false // 缺省为 false\n            } // 渐变颜色\n          },\n          symbol:\n            'path://M12.000,-0.000 C12.000,-0.000 16.074,60.121 22.731,60.121 C26.173,60.121 -3.234,60.121 0.511,60.121 C7.072,60.121 12.000,-0.000 12.000,-0.000 Z',\n\n          data: [13, 54, 71, 24, 57]\n        }\n      ]\n    })\n  })\n  onBeforeUnmount(function () {\n    instance.dispose()\n  })\n}\n\nfunction useLine6() {\n  /**\n   * @type {echarts.EChartsType}\n   */\n  let instance = null\n\n  onMounted(function () {\n    const el = document.querySelector('#chart-line6')\n    instance = echarts.init(el)\n\n    instance.setOption({\n      grid: {\n        top: '30',\n        left: '1%',\n        right: '1%',\n        bottom: '8%',\n        containLabel: true\n      },\n      legend: {\n        top: '0',\n        right: 'center',\n        itemGap: 20,\n        itemWidth: 16,\n        itemHeight: 16,\n        color: '#fff',\n        fontSize: 13,\n        data: ['注册总量', '最新注册量']\n      },\n      xAxis: {\n        type: 'category',\n        data: ['一月', '二月', '三月', '四月', '五月', '六月', '七月'],\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          color: '#FFFFFF'\n        }\n      },\n      yAxis: {\n        type: 'value',\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: true,\n          lineStyle: {\n            type: 'dashed',\n            color: '#4C77A3'\n          }\n        },\n        axisLabel: {\n          color: '#FFFFFF'\n        }\n      },\n      series: [\n        {\n          name: '注册总量',\n          type: 'line',\n          data: [150, 230, 224, 218, 135, 260, 147],\n          symbol: 'circle',\n          symbolSize: 10,\n          showAllSymbol: true,\n          itemStyle: {\n            color: '#00b3f4',\n            borderColor: '#fff',\n            shadowColor: 'rgba(0, 0, 0, .3)',\n            borderWidth: 3,\n            shadowBlur: 0,\n            shadowOffsetY: 2,\n            shadowOffsetX: 2\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(\n              0,\n              0,\n              0,\n              1,\n              [\n                {\n                  offset: 0,\n                  color: 'rgba(0,179,244,0.3)'\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(0,179,244,0)'\n                }\n              ],\n              false\n            ),\n            shadowColor: 'rgba(0,179,244, 0.9)',\n            shadowBlur: 20\n          }\n        },\n        {\n          name: '最新注册量',\n          type: 'bar',\n          barWidth: '20',\n          data: [200, 120, 80, 70, 110, 130, 188],\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n              {\n                offset: 1,\n                color: '#00E3FE'\n              },\n              {\n                offset: 0,\n                color: '#0176CD'\n              }\n            ])\n          }\n        }\n      ]\n    })\n  })\n\n  onBeforeUnmount(function () {\n    instance.dispose()\n  })\n}\n\nfunction useRadar1() {\n  /**\n   * @type {Echarts.EChartsType}\n   */\n  let instance = null\n\n  onMounted(function () {\n    const el = document.querySelector('#chart-radar1')\n    instance = echarts.init(el)\n\n    const color = ['#4A99FF', '#4BFFFC'] // 线条边框颜色\n\n    instance.setOption({\n      backgroundColor: config.backgroundColor,\n      color,\n      title: {\n        text: '车辆radar图',\n        color: '#fff',\n        fontSize: 16,\n        padding: 0,\n        top: 35,\n        left: 40\n      },\n      legend: {\n        // data，就是取得每个series里面的name属性。\n        orient: 'vertical',\n        icon: 'circle', // 图例形状\n        padding: 0,\n        top: 20,\n        right: '15%',\n        itemWidth: 14, // 小圆点宽度\n        itemHeight: 14, // 小圆点高度\n        itemGap: 21, // 图例每项之间的间隔。[ default: 10 ]横向布局时为水平间隔，纵向布局时为纵向间隔。\n        fontSize: 14,\n        color: '#00E4FF'\n      },\n      tooltip: {\n        show: true\n      },\n      radar: {\n        center: ['50%', '50%'], // 圆心坐标距离左边和上边的距离\n        radius: ['1%', '75%'], // 内外半径，不写默认是75%\n        startAngle: 90, // 可以旋转图形\n        shape: 'polygon',\n        axisName: {\n          color: '#fff',\n          fontSize: 16\n        },\n        indicator: [\n          {\n            name: '小型车',\n            max: 6000\n          },\n          {\n            name: '中型车',\n            max: 5000\n          },\n          {\n            name: '大型车',\n            max: 5000\n          },\n          {\n            name: '货车',\n            max: 5000\n          },\n          {\n            name: '特种车',\n            max: 5000\n          },\n          {\n            nam: '贵宾车',\n            max: 5000\n          }\n        ],\n        splitArea: {\n          show: false // 默认显示颜色分割区域，不需要显示\n        },\n        axisLine: {\n          show: true, // 是否显示十字交叉线\n          // 指向外圈文本的分隔线样式\n          lineStyle: {\n            color: '#153269' // 线条颜色\n          }\n        },\n        axisLabel: { show: false },\n        splitLine: {\n          // 雷达一圈圈\n          show: true,\n          lineStyle: {\n            type: 'solid',\n            color: '#113865', // 雷达一圈圈颜色分隔线颜色\n            width: 1 // 分隔线线宽\n          }\n        }\n      },\n      series: [\n        {\n          type: 'radar',\n          data: [\n            {\n              name: '车辆数',\n              value: [4300, 4700, 3600, 3900, 3800, 4200],\n              symbolSize: 8,\n              symbol: 'circle',\n\n              lineStyle: {\n                width: 2\n              },\n              areaStyle: {\n                // 单项区域填充样式\n                color: {\n                  type: 'linear',\n                  x: 0, // 右\n                  y: 0, // 下\n                  x2: 1, // 左\n                  y2: 1, // 上\n                  colorStops: [\n                    {\n                      offset: 0,\n                      color: color[0]\n                    },\n                    {\n                      offset: 0.5,\n                      color: 'rgba(0,0,0,0)'\n                    },\n                    {\n                      offset: 1,\n                      color: color[0]\n                    }\n                  ],\n                  global: false\n                },\n                opacity: 1 // 区域透明度\n              }\n            },\n            {\n              value: [3200, 3000, 3400, 2000, 3900, 2000],\n              name: '设计车位',\n              symbolSize: 8,\n              symbol: 'circle',\n              lineStyle: {\n                width: 2\n              },\n\n              areaStyle: {\n                // 单项区域填充样式\n                color: {\n                  type: 'linear',\n                  x: 0, // 右\n                  y: 0, // 下\n                  x2: 1, // 左\n                  y2: 1, // 上\n                  colorStops: [\n                    {\n                      offset: 0,\n                      color: color[1]\n                    },\n                    {\n                      offset: 0.5,\n                      color: 'rgba(0,0,0,0)'\n                    },\n                    {\n                      offset: 1,\n                      color: color[1]\n                    }\n                  ],\n                  global: false\n                },\n                opacity: 1 // 区域透明度\n              }\n            }\n          ]\n        }\n      ]\n    })\n  })\n\n  onBeforeUnmount(function () {\n    instance.dispose()\n  })\n}\n\nfunction useTree() {\n  /**\n   * @type {echarts.EChartsType}\n   */\n  let instance = null\n\n  const getData = function () {\n    const data = {\n      name: '根节点1',\n      value: 0,\n      children: []\n    }\n\n    for (let i = 1; i <= 10; i++) {\n      const obj = {\n        name: '节点' + i,\n        value: i,\n        children: []\n      }\n      for (let j = 1; j <= 5; j++) {\n        const obj2 = {\n          name: `节点1-${i}-${j}`,\n          value: 1 + '-' + i + '-' + j\n        }\n        if (j % 2 === 1) {\n          obj2.children = []\n          for (let k = 1; k <= 3; k++) {\n            const obj3 = {\n              name: `节点1-${i}-${j}-${k}`,\n              value: 1 + '-' + i + '-' + j + '-' + k\n            }\n            obj2.children.push(obj3)\n          }\n        }\n\n        obj.children.push(obj2)\n      }\n\n      data.children.push(obj)\n    }\n    let arr = []\n    arr.push(data)\n    //\n    arr = handle(arr, 0)\n    return arr\n  }\n\n  const handle = function handleData(data, index, color = '#00f6ff') {\n    // index标识第几层\n    return data.map((item, index2) => {\n      // 计算出颜色\n      if (index === 1) {\n        color = config.color.find((item, eq) => eq === index2 % 10)\n      }\n      // 设置节点大小\n      if (index === 0 || index === 1) {\n        item.label = {\n          position: 'inside'\n          //   rotate: 0,\n          //   borderRadius: \"50%\",\n        }\n      }\n      // 设置label大小\n      switch (index) {\n        case 0:\n          item.symbolSize = 70\n          break\n        case 1:\n          item.symbolSize = 50\n          break\n        default:\n          item.symbolSize = 10\n          break\n      }\n      // 设置线条颜色\n      item.lineStyle = { color }\n\n      if (item.children) {\n        // 存在子节点\n        item.itemStyle = {\n          borderColor: color,\n          color\n        }\n        item.children = handle(item.children, index + 1, color)\n      } else {\n        // 不存在\n        item.itemStyle = {\n          color: 'transparent',\n          borderColor: color\n        }\n      }\n      return item\n    })\n  }\n\n  onMounted(function () {\n    const el = document.querySelector('#chart-three')\n    instance = echarts.init(el)\n\n    instance.setOption({\n      backgroundColor: config.backgroundColor,\n      type: 'tree',\n      toolbox: {\n        // 工具栏\n        show: true,\n        iconStyle: {\n          borderColor: '#03ceda'\n        },\n        feature: {\n          restore: {}\n        }\n      },\n      tooltip: {\n        // 提示框\n        trigger: 'item',\n        triggerOn: 'mousemove',\n        backgroundColor: 'rgba(1,70,86,1)',\n        borderColor: 'rgba(0,246,255,1)',\n        borderWidth: 0.5,\n        fontSize: 10\n      },\n      series: [\n        {\n          type: 'tree',\n          hoverAnimation: true, // hover样式\n          data: getData(),\n          top: 20,\n          bottom: 20,\n          left: 0,\n          right: 0,\n          layout: 'radial',\n          symbol: 'circle',\n          symbolSize: 10,\n          nodePadding: 20,\n          animationDurationUpdate: 750,\n          expandAndCollapse: true, // 子树折叠和展开的交互，默认打开\n          initialTreeDepth: 2,\n          focusNodeAdjacency: true,\n          itemStyle: {\n            borderWidth: 1\n          },\n          label: {\n            // 标签样式\n            color: '#fff',\n            fontSize: 10,\n            fontFamily: 'SourceHanSansCN',\n            position: 'inside',\n            rotate: 0\n          },\n          lineStyle: {\n            width: 1,\n            curveness: 0.5\n          }\n        }\n      ]\n    })\n  })\n\n  onBeforeUnmount(function () {\n    instance.dispose()\n  })\n}\n\nfunction useGauge() {\n  /**\n   * @type {echarts.EChartsType}\n   */\n  let instance = null\n  onMounted(function () {\n    const el = document.getElementById('chart-gauge')\n    const value = 60\n    instance = echarts.init(el)\n\n    instance.setOption({\n      backgroundColor: config.backgroundColor,\n      grid: {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        containLabel: true\n      },\n      series: [\n        {\n          type: 'gauge',\n          radius: '100%',\n          splitNumber: 10,\n          min: 10,\n          max: 100,\n          startAngle: 225,\n          endAngle: -45,\n          axisLine: {\n            show: true,\n            lineStyle: {\n              width: 1,\n              color: [[1, 'rgba(0,0,0,0)']]\n            }\n          }, // 仪表盘轴线\n          axisTick: {\n            show: true,\n            lineStyle: {\n              color: 'rgba(255,255,255,0.6)',\n              width: 1\n            },\n            length: -8\n          }, // 刻度样式\n          splitLine: {\n            show: true,\n            length: -20,\n            lineStyle: {\n              color: 'rgba(255,255,255,0.6)'\n            }\n          }, // 分隔线样式\n          axisLabel: {\n            // show:false,\n            distance: 30,\n            color: '#03b7c9',\n            fontSize: '14',\n            fontWeight: 'bold',\n            formatter: '{value}%'\n          },\n          pointer: {\n            show: 0\n          },\n          detail: {\n            show: 0\n          }\n        },\n\n        // 内侧指针、数值显示\n        {\n          name: '达标率',\n          type: 'gauge',\n          radius: '60%',\n          startAngle: 225,\n          endAngle: -45,\n          min: 0,\n          max: 100,\n          axisLine: {\n            show: true,\n            lineStyle: {\n              width: 6,\n              color: [\n                [\n                  value / 100,\n                  new echarts.graphic.LinearGradient(0, 0, 1, 0, [\n                    {\n                      offset: 0,\n                      color: '#ff0'\n                    },\n                    {\n                      offset: 1,\n                      color: '#f00'\n                    }\n                  ])\n                ],\n                [1, '#222e7d']\n              ]\n            }\n          },\n          axisTick: {\n            show: 0\n          },\n          splitLine: {\n            show: 0\n          },\n          axisLabel: {\n            show: 0\n          },\n          pointer: {\n            show: false,\n            length: '105%'\n          },\n          detail: {\n            show: true,\n            offsetCenter: [0, '-10%'],\n            fontSize: 25,\n            color: '#fff',\n            formatter: ['{name|达标率}' + '', '' + '{value}%'].join('\\n'),\n            rich: {\n              name: {\n                fontSize: 20,\n                lineHeight: 40,\n                color: '#fff',\n                fontWeight: 'bold'\n              }\n            }\n          },\n          itemStyle: {\n            color: '#03b7c9'\n          },\n          data: [\n            {\n              value\n            }\n          ]\n        }\n      ]\n    })\n  })\n  onBeforeUnmount(function () {\n    instance.dispose()\n  })\n}\n\nfunction useLine7() {\n  /**\n   * @type {echarts.EChartsType}\n   */\n  let instance = null\n  onMounted(function () {\n    const el = document.getElementById('chart-line7')\n    instance = echarts.init(el)\n    instance.setOption({\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        }\n      },\n      grid: {\n        top: 40,\n        left: 0,\n        right: 0,\n        bottom: 40\n      },\n      xAxis: [\n        {\n          type: 'category',\n          data: ['工作票', '操作票', '抢修', '用电调查', '设备巡视', '现场勘查', '到岗到位'],\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(255,255,255,0.12)'\n            }\n          },\n          axisLabel: {\n            margin: 10,\n            color: '#e2e9ff',\n            fontSize: 14\n          }\n        }\n      ],\n      yAxis: [\n        {\n          axisLabel: {\n            formatter: '{value}',\n            color: '#e2e9ff'\n          },\n          axisLine: {\n            show: false\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255,255,255,0.12)'\n            }\n          }\n        }\n      ],\n      series: [\n        {\n          type: 'bar',\n          data: [300, 450, 770, 203, 255, 188, 156],\n          barWidth: '20px',\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(\n              0,\n              0,\n              0,\n              1,\n              [\n                {\n                  offset: 0,\n                  color: 'rgba(0,244,255,1)' // 0% 处的颜色\n                },\n                {\n                  offset: 1,\n                  color: 'rgba(0,77,167,1)' // 100% 处的颜色\n                }\n              ],\n              false\n            ),\n            barBorderRadius: [30, 30, 30, 30],\n            shadowColor: 'rgba(0,160,221,1)',\n            shadowBlur: 4\n          },\n          label: {\n            show: true,\n            lineHeight: 21,\n            width: 100,\n            height: 25,\n            backgroundColor: 'rgba(0,160,221,0.1)',\n            borderRadius: 200,\n            position: ['-5', '-40'],\n            distance: 1,\n            formatter: ['    {d|●}', ' {a|{c}} \\n', '    {b|}'].join(''),\n            rich: {\n              d: {\n                color: '#3CDDCF'\n              },\n              a: {\n                color: '#fff',\n                align: 'center'\n              },\n              b: {\n                width: 1,\n                height: 15,\n                borderWidth: 1,\n                borderColor: '#234e6c',\n                align: 'left'\n              }\n            }\n          }\n        }\n      ]\n    })\n  })\n  onBeforeUnmount(function () {\n    instance.dispose()\n  })\n}\n\nexport default {\n  name: 'AppIndex',\n  setup() {\n    usePie1()\n    useLine1()\n    useLine2()\n    useLine3()\n    useLine4()\n    useRadar1()\n    useTree()\n    useLine5()\n    useLine6()\n    useGauge()\n    useLine7()\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.data-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: #081736;\n}\n\n.data-main {\n  position: relative;\n}\n\n.data-left,\n.data-right {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n}\n</style>\n"],"names":["config","readonly","backgroundColor","color","name","setup","data","value","instance","onMounted","el","document","querySelector","echarts.init","setOption","grid","top","left","right","bottom","containLabel","legend","orient","itemGap","itemWidth","itemHeight","textStyle","fontSize","series","type","radius","center","roseType","minShowLabelAngle","labelLine","length","length2","smooth","onBeforeUnmount","dispose","usePie1","options","xAxis","axisLine","show","axisTick","axisLabel","yAxis","min","splitNumber","splitLine","lineStyle","margin","showAllSymbol","symbol","symbolSize","shadowColor","shadowBlur","shadowOffsetY","shadowOffsetX","label","position","itemStyle","borderColor","borderWidth","tooltip","areaStyle","echarts.graphic.LinearGradient","offset","useLine1","boundaryGap","width","useLine2","useLine3","opacity","symbolOffset","z","symbolPosition","barWidth","useLine4","title","text","padding","icon","radar","startAngle","shape","axisName","indicator","max","nam","splitArea","x","y","x2","y2","colorStops","global","useRadar1","getData","children","i","obj","j","obj2","concat","k","obj3","push","arr","handle","index","map","item","index2","find","eq","toolbox","iconStyle","feature","restore","trigger","triggerOn","hoverAnimation","layout","nodePadding","animationDurationUpdate","expandAndCollapse","initialTreeDepth","focusNodeAdjacency","fontFamily","rotate","curveness","useTree","getElementById","borderRadius","align","interval","fontStyle","stack","globalCoord","useLine5","useLine6","endAngle","distance","fontWeight","formatter","pointer","detail","offsetCenter","join","rich","lineHeight","useGauge","axisPointer","barBorderRadius","height","d","a","b","useLine7"],"mappings":"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"}